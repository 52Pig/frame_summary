
删除：
sed '2,5d' 删除2到5行
sed '2d' 删除第二行
sed '2,$d' 删除2到最后一行
sed '2a drink' 第三行加上drink
sed '2i drink' 第一行加上drink

sed '2a Drink tea or ......\
> drink beer ?'  第二行后，即第三行加上Drink tea or ......
                             第四行加上drink beer
                 \代表新行

sed '2,5c ABC' 将第2-5行的内容取代成为ABC
sed '5,7p' 列出5到7行
sed -n '/root/p' 只列出文件中有root关键字的行
sed '/root/d' 删除包含root的行，其他行输出

sed -n '/root/{s/bash/blueshell/;p}'
搜索文件,找到root对应的行，执行后面花括号中的一组命令，每个命令之间用分号分隔，这里把bash替换为blueshell，再输出这行
sed -n '/bash/{s/bash/blueshell/;p;q}'
如果只替换文件中的第一个bash关键字为blueshell，就退出；q代表退出


替换：
sed 's/要被取代的字串/新的字串/g'

sed 's/^.*addr://g' 将包含“.*addr:”的部分删除
sed 's/Bcast.*$//g' 将包含“Bcast.*”的部分删除

sed -e '3,$d' -e 's/bash/blueshell/' -e多点编辑

修改：
sed -i 's/\.$/\!/g' filename   将filename中每一行结尾若为 . 则换成 !

利用 sed 直接在filename 最后一行加入『# This is a test』
sed -i '$a # This is a test' filename
$代表最后一行
a代表新增

====================================
-r, --regexp-extended
        use extended regular expressions in the script.

sed -r 's/(.)/A/g'   
sed 's/\(.\)/A/g'

不加-r里边的正则需要转义


for file in $(find . -type f );do grep -q "abc" $file && sed -i 's/def/123/g;s/ggg/hhh/g' $file;done



================
sed -i "s/\/opt\/mobile/\/work\/mobile/g" `grep '/opt/mobile/' -rl ./`




































