
mysql -h${ip} -u${user} -p${pass} --default-character-set=utf8 ${database}
LOAD DATA LOCAL INFILE '/tmp/lfl/000000_0.bz2' INTO TABLE y CHARACTER SET utf8

CREATE TABLE `z` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `pid` int(32) NOT NULL DEFAULT '' COMMENT 'pid',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8   |


drop index ind on homedrawer_instant_hour_20160316

alter table stat_day_sdkpagepv add column appver varchar(20) not null after pageview;


关于MySQL连接
-u$USER 用户名
-p$PASSWD 密码
-h127.0.0.1 如果连接远程服务器,请用对应的主机名或者IP地址替换
-P3306 端口
--default-character-set=utf8 指定字符集
关于mysql参数
--skip-column-names 不显示数据列的名字
-B 以批处理的方式运行mysql程序.查询结果将显示为制表符间隔格式.
-e 执行命令后,退出
关于mysqldump参数
-A 全库备份
--routines 备份存储过程和函数
--default-character-set=utf8 设置字符集
--lock-all-tables 全局一致性锁
--add-drop-database 在每次执行建表语句之前,先执行DROP TABLE IF EXIST语句
--no-create-db 不输出CREATE DATABASE语句
--no-create-info 不输出CREATE TABLE语句
--databases 将后面的参数都解析为库名
--tables 第一个参数为库名 后续为表名
关于LOAD DATA语法
如果LOAD DATA语句不带LOCAL关键字,就在MySQL的服务器上直接读取文件,且要具有FILE权限.
如果带LOCAL关键字,就在客户端本地读取数据文件,通过网络传到MySQL.
LOAD DATA语句,同样被记录到binlog,不过是内部的机制.




-----------------------
LOAD DATA INFILE 'path/file' IGNORE 
INTO TABLE tab_name
FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '"' LINES TERMINATED BY '\n' (col1,col2.....,coln) 


mysqldump -h${ip} -u${user} -p${pass} -t ${database} ${tablename}>/vol/mobile/liangfeilong/homedrawer.sql

mysqldump -h${ip} -u${user} -p${pass} --where="date=20151026" -t${database} ${tablename} > /vol/mobile/liangfeilong/homedrawer.sql
------------------

添加索引：
alter table tablename change depno depno int(5) not null;
alter table tablename add index index_name(字段名1，字段名2……)
alter table tablename add index emp_name(name);

show full processlist;


alter table stat_push_awake change pvs pvs int(11) COMMENT '成功唤起量'
alter table stat_push_awake change pv pv int(11) COMMENT '有效唤起量'

alter table stat_push_awakeapp change unionname 
unionname varchar(20) not null comment '友商'
---------
MYISAM
查询快，修改慢。坏块需要手动修复
INNODB

----
explain查看影响行数



alter table channel_chouti_hour_overview modify sub_channel_page varchar(30) default null;

alter table history_placement_daily engine=innodb;


====================
create table if not exists homedrawer_instant_hour (

`id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
`date` varchar(10) NOT NULL,
`hour` int(11) NOT NULL,
`os_id` int(11) NOT NULL,
`device_type` int(11) NOT NULL,
`channel_name` varchar(30) DEFAULT NULL,
`chouti_pos` int(11) DEFAULT '0',
`vid` varchar(64) DEFAULT 'null',
`videoname` varchar(64) DEFAULT 'null',
`pv` int(11) DEFAULT '0',
`uv` int(11) DEFAULT '0',
PRIMARY KEY (`id`),
KEY `ind` (`date`,`os_id`,`device_type`,`channel_name`,`chouti_pos`,`hour`)
)

insert into stat_day_index(date,business_type,uv,vv,duration,newuser,vv_average,ts_average,active_user) 
values(20160120,27,1,1,1,1,1,1,1)
=================调度时间处理==========================
date_add('2015-01-01 23:00:00', interval '01:00:00' day_second);
date_sub('2015-01-01 23:00:00', interval '01:00:00' day_second);

select timediff(end_time,start_time),job_id 
from mobile_scheduler_66 
where run_date like '%2015-08-25%' and job_id in (343,347,359,360,361,365,366,420,421,454,455,544,479,478,475,474,473,477,525,514,511,540,541,509,512) 
order by timediff(end_time,start_time) desc;


select timediff(end_time,start_time) runtime,job_id 
from mobile_scheduler_history_66 
where run_date like '%2015-09-15%' and job_id in (
  select job_id 
  from mobile_scheduler_66 
  where notify_emails like '%${phone}%'
)
order by timediff(end_time,start_time) desc;


select next_runtime,date_add(next_runtime, interval '02:00:00' day_second)
from mobile_scheduler_66
where next_runtime like '%2016-09-10%'
and frq not in (888,999,6) and job_id not in (644,645) 


任务向后推迟一天：
select next_runtime,date_add(next_runtime, interval '24:00:00' day_second) 
from mobile_scheduler_66 where job_cmd like '%push%' and frq=6;

向前提前一天
select next_runtime,date_sub(next_runtime, interval '24:00:00' day_second) from mobile_scheduler_66 
where job_cmd like '%push%' and frq=6;
;

select split(split(next_runtime,' ')[1],':')[0] from mobile_scheduler_66 where is_load=1;

update mobile_scheduler_66 set next_runtime=date_add(next_runtime, interval '24:00:00' day_second)
where job_cmd like '%push%' and frq=6;


mobile_scheduler_66:
run_date:实际执行任务的日期(eg:2016-02-17)
load_time:mobile_scheduler_66当中某任务加载的日期时间(2016-02-18 10:00:54)
start_time:mobile_scheduler_66当中某job_id实际执行的时间(2016-02-18 10:05:19)
state:2正在执行

frq=0  #每天,,可执行状态
frq=1  #每周执行
frq=6  #不可执行状态

poir  #优先级  0最高
IS_LOAD=1是任务已经被装载，正在执行。=0没被执行


















